"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[4126],{5440:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>l,contentTitle:()=>n,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var t=r(4848),o=r(8453);const s={id:"overview",title:"COMP 1410 - Overview",sidebar_label:"COMP-1410",slug:"/comp-1410/overview"},n=void 0,c={id:"comp-1410/overview",title:"COMP 1410 - Overview",description:"Course Title",source:"@site/courses/comp-1410/overview.md",sourceDirName:"comp-1410",slug:"/comp-1410/overview",permalink:"/wiki/courses/comp-1410/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/UWindsorCSS/Wiki/tree/master/courses/comp-1410/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"COMP 1410 - Overview",sidebar_label:"COMP-1410",slug:"/comp-1410/overview"},sidebar:"indexNav",previous:{title:"COMP-1400 Setup Guide",permalink:"/wiki/courses/comp-1400/setup-guide"},next:{title:"COMP-2057",permalink:"/wiki/courses/comp-2057/overview"}},l={},a=[{value:"Course Title",id:"course-title",level:2},{value:"Course Description",id:"course-description",level:2},{value:"Typical Course Offering",id:"typical-course-offering",level:2},{value:"Is a Textbook Required?",id:"is-a-textbook-required",level:2},{value:"Prerequisites",id:"prerequisites",level:2}];function u(e){const i={h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"course-title",children:"Course Title"}),"\n",(0,t.jsx)(i.p,{children:'The title for COMP-1410 is "Intro to Programming and Algorithms II".'}),"\n",(0,t.jsx)(i.h2,{id:"course-description",children:"Course Description"}),"\n",(0,t.jsx)(i.p,{children:"This course is the continuation of COMP-1400 that introduces students to more advanced algorithm design and programming in a high level language such as C. The main objectives of the course are to develop the ability to identify, understand, and design solutions to a wide variety of problems. Topics covered include: multi-dimensional arrays, pointers, strings, advanced modular programming, records, binary files, recursion, stacks, linked lists and introduction to algorithm analysis. (Prerequisite: COMP-1000 (or MATH-1720) and COMP-1400.) (3 lecture and 1.5 laboratory hours a week)."}),"\n",(0,t.jsx)(i.h2,{id:"typical-course-offering",children:"Typical Course Offering"}),"\n",(0,t.jsx)(i.p,{children:"COMP-1410 is typically offered in all semesters."}),"\n",(0,t.jsx)(i.h2,{id:"is-a-textbook-required",children:"Is a Textbook Required?"}),"\n",(0,t.jsx)(i.p,{children:"No, while there is a textbook listed and you may find it helpful, it is not required to succeed in this course."}),"\n",(0,t.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(i.p,{children:"COMP-1000 (or MATH-1720) and COMP-1400 are the prerequisites for this class."})]})}function d(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>n,x:()=>c});var t=r(6540);const o={},s=t.createContext(o);function n(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);