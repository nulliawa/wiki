"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[7622],{2147:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>c,contentTitle:()=>n,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=r(4848),t=r(8453);const o={id:"overview",title:"COMP 1400 - Overview",sidebar_label:"COMP-1400 - Overview",slug:"/comp-1400/overview"},n=void 0,l={id:"comp-1400/overview",title:"COMP 1400 - Overview",description:"Course Title",source:"@site/courses/comp-1400/overview.md",sourceDirName:"comp-1400",slug:"/comp-1400/overview",permalink:"/wiki/courses/comp-1400/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/UWindsorCSS/Wiki/tree/master/courses/comp-1400/overview.md",tags:[],version:"current",frontMatter:{id:"overview",title:"COMP 1400 - Overview",sidebar_label:"COMP-1400 - Overview",slug:"/comp-1400/overview"},sidebar:"indexNav",previous:{title:"COMP-1047",permalink:"/wiki/courses/comp-1047/overview"},next:{title:"COMP-1400 Setup Guide",permalink:"/wiki/courses/comp-1400/setup-guide"}},c={},a=[{value:"Course Title",id:"course-title",level:2},{value:"Course Description",id:"course-description",level:2},{value:"Typical Course Offering",id:"typical-course-offering",level:2},{value:"Is a Textbook Required?",id:"is-a-textbook-required",level:2},{value:"Prerequisites",id:"prerequisites",level:2}];function u(e){const i={h2:"h2",p:"p",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"course-title",children:"Course Title"}),"\n",(0,s.jsx)(i.p,{children:'The title for COMP-1400 is "Intro to Programming and Algorithms I".'}),"\n",(0,s.jsx)(i.h2,{id:"course-description",children:"Course Description"}),"\n",(0,s.jsx)(i.p,{children:"This course is the first of a two-course sequence designed to introduce students to algorithm design and programming in a high-level language such as C. The main objectives of the course are to develop the ability to identify, understand and design solutions to a wide variety of problems. Topics include: computer system overview, hardware and software, problem solving steps, concepts of variables, constants, data types, algorithmic structure, sequential logic, decisions, loops, modular programming, one-dimensional arrays, text files. If possible, problems like searching/sorting will be addressed. (3 lecture hours and 1.5 laboratory hours a week)"}),"\n",(0,s.jsx)(i.h2,{id:"typical-course-offering",children:"Typical Course Offering"}),"\n",(0,s.jsx)(i.p,{children:"COMP-1400 is typically offered in all semesters."}),"\n",(0,s.jsx)(i.h2,{id:"is-a-textbook-required",children:"Is a Textbook Required?"}),"\n",(0,s.jsx)(i.p,{children:"No, while there is a textbook listed and you may find it helpful, it is not required to succeed in this course."}),"\n",(0,s.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(i.p,{children:"There is no UWindsor prerequisite for this class."})]})}function d(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>n,x:()=>l});var s=r(6540);const t={},o=s.createContext(t);function n(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);